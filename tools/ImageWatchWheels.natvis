<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010"> 
  <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1"
                MenuName="Add to Image Watch"/>

  <!-- matx -->
  <Type Name="wheels::tensor&lt;*,wheels::tensor_shape&lt;unsigned __int64,unsigned __int64,unsigned __int64&gt;&gt;">
    <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
  </Type>

  <Type Name="wheels::tensor&lt;*,wheels::tensor_shape&lt;unsigned __int64,unsigned __int64,unsigned __int64&gt;&gt;">
    <DisplayString Condition='strcmp("unsigned char", "$T1") == 0'>
      {{UINT8, {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("unsigned short", "$T1") == 0'>
      {{UINT16, {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("int", "$T1") == 0'>
      {{INT32, {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("float", "$T1") == 0'>
      {{FLOAT32, {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("double", "$T1") == 0'>
      {{FLOAT64, {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <Expand>
      <Synthetic Name="[type]" Condition='strcmp("unsigned char", "$T1") == 0'>
        <DisplayString>UINT8</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("unsigned short", "$T1") == 0'>
        <DisplayString>UINT16</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("int", "$T1") == 0'>
        <DisplayString>INT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("float", "$T1") == 0'>
        <DisplayString>FLOAT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("double", "$T1") == 0'>
        <DisplayString>FLOAT64</DisplayString>
      </Synthetic>
      <Item Name="[channels]">1</Item>
      <Item Name="[width]">((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val</Item>
      <Item Name="[height]">this->_storage._shape._val</Item>
      <Item Name="[data]">($T1 *)this->_storage._data</Item>
      <Item Name="[stride]">((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val * sizeof($T1)</Item>
    </Expand>
  </Type>


  <!-- matx int-->
  <Type Name="wheels::tensor&lt;*,wheels::tensor_shape&lt;int,int,int&gt;&gt;">
    <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
  </Type>

  <Type Name="wheels::tensor&lt;*,wheels::tensor_shape&lt;int,int,int&gt;&gt;">
    <DisplayString Condition='strcmp("unsigned char", "$T1") == 0'>
      {{UINT8, {((wheels::tensor_shape&lt;int,int&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("unsigned short", "$T1") == 0'>
      {{UINT16, {((wheels::tensor_shape&lt;int,int&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("int", "$T1") == 0'>
      {{INT32, {((wheels::tensor_shape&lt;int,int&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("float", "$T1") == 0'>
      {{FLOAT32, {((wheels::tensor_shape&lt;int,int&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("double", "$T1") == 0'>
      {{FLOAT64, {((wheels::tensor_shape&lt;int,int&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <Expand>
      <Synthetic Name="[type]" Condition='strcmp("unsigned char", "$T1") == 0'>
        <DisplayString>UINT8</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("unsigned short", "$T1") == 0'>
        <DisplayString>UINT16</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("int", "$T1") == 0'>
        <DisplayString>INT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("float", "$T1") == 0'>
        <DisplayString>FLOAT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("double", "$T1") == 0'>
        <DisplayString>FLOAT64</DisplayString>
      </Synthetic>
      <Item Name="[channels]">1</Item>
      <Item Name="[width]">((wheels::tensor_shape&lt;int,int&gt;*)(&amp;(this->_storage._shape)))->_val</Item>
      <Item Name="[height]">this->_storage._shape._val</Item>
      <Item Name="[data]">($T1 *)this->_storage._data</Item>
      <Item Name="[stride]">((wheels::tensor_shape&lt;int,int&gt;*)(&amp;(this->_storage._shape)))->_val * sizeof($T1)</Item>
    </Expand>
  </Type>
  
  
  <!-- images -->
  <Type Name="wheels::tensor&lt;wheels::tensor&lt;*,wheels::tensor_shape&lt;unsigned __int64,wheels::const_ints&lt;unsigned __int64,*&gt;&gt;&gt;,wheels::tensor_shape&lt;unsigned __int64,unsigned __int64,unsigned __int64&gt;&gt;">
    <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
  </Type>
 
  <Type Name="wheels::tensor&lt;wheels::tensor&lt;*,wheels::tensor_shape&lt;unsigned __int64,wheels::const_ints&lt;unsigned __int64,*&gt;&gt;&gt;,wheels::tensor_shape&lt;unsigned __int64,unsigned __int64,unsigned __int64&gt;&gt;">
    <DisplayString Condition='strcmp("unsigned char", "$T1") == 0'>
      {{UINT8, {(size_t)$T2} x {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("unsigned short", "$T1") == 0'>
      {{UINT16, {(size_t)$T2} x {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("int", "$T1") == 0'>
      {{INT32, {(size_t)$T2} x {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("float", "$T1") == 0'>
      {{FLOAT32, {(size_t)$T2} x {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <DisplayString Condition='strcmp("double", "$T1") == 0'>
      {{FLOAT64, {(size_t)$T2} x {((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val} x {this->_storage._shape._val}}}
    </DisplayString>
    <Expand>
      <Synthetic Name="[type]" Condition='strcmp("unsigned char", "$T1") == 0'>
        <DisplayString>UINT8</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("unsigned short", "$T1") == 0'>
        <DisplayString>UINT16</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("int", "$T1") == 0'>
        <DisplayString>INT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("float", "$T1") == 0'>
        <DisplayString>FLOAT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition='strcmp("double", "$T1") == 0'>
        <DisplayString>FLOAT64</DisplayString>
      </Synthetic>
      <Item Name="[channels]">(size_t)$T2</Item>
      <Item Name="[width]">((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val</Item>
      <Item Name="[height]">this->_storage._shape._val</Item>
      <Item Name="[data]">($T1 *)this->_storage._data</Item>
      <Item Name="[stride]">((wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;*)(&amp;(this->_storage._shape)))->_val * $T2 * sizeof($T1)</Item>
    </Expand>
  </Type>
  
</AutoVisualizer>