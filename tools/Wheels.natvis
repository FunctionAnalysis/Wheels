<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="wheels::const_ints&lt;*,*&gt;">
    <DisplayString>{$T2}</DisplayString>
    <Expand/>
  </Type>
  <Type Name="wheels::const_ints&lt;*,*,*&gt;">
    <DisplayString>{$T2},{$T3}</DisplayString>
    <Expand/>
  </Type>
  <Type Name="wheels::const_ints&lt;*,*,*,*&gt;">
    <DisplayString>{$T2},{$T3},{$T4}</DisplayString>
    <Expand/>
  </Type>
  <Type Name="wheels::const_ints&lt;*,*,*,*&gt;">
    <DisplayString>{$T2},{$T3},{$T4}</DisplayString>
    <Expand/>
  </Type>
  <Type Name="wheels::const_ints&lt;*,*,*,*,*&gt;">
    <DisplayString>{$T2},{$T3},{$T4},{$T5}</DisplayString>
    <Expand/>
  </Type>

  <Type Name="wheels::unary_op_minus">
    <DisplayString>-</DisplayString>
  </Type>
  <Type Name="wheels::unary_op_not">
    <DisplayString>!</DisplayString>
  </Type>
  <Type Name="wheels::unary_op_bitwise_not">
    <DisplayString>~</DisplayString>
  </Type>
  <Type Name="wheels::binary_op_plus">
    <DisplayString>+</DisplayString>
  </Type>
  <Type Name="wheels::binary_op_minus">
    <DisplayString>-</DisplayString>
  </Type>
  <Type Name="wheels::binary_op_mul">
    <DisplayString>*</DisplayString>
  </Type>
  <Type Name="wheels::binary_op_div">
    <DisplayString>/</DisplayString>
  </Type>
  <Type Name="wheels::binary_op_mod">
    <DisplayString>%</DisplayString>
  </Type>
  <Type Name="wheels::std_func_max">
    <DisplayString>max</DisplayString>
  </Type>
  <Type Name="wheels::std_func_min">
    <DisplayString>min</DisplayString>
  </Type>

  <Type Name="wheels::const_arg&lt;*&gt;">
    <DisplayString>arg{$T1}</DisplayString>
    <Expand/>
  </Type>
  <Type Name="wheels::const_arg&lt;*&gt;&amp;">
    <DisplayString>arg{$T1}</DisplayString>
    <Expand/>
  </Type>

  <Type Name="wheels::const_coeff&lt;*&gt;">
    <DisplayString>{this->val}</DisplayString>
  </Type>
  
  <Type Name="wheels::const_call_list&lt;*,*&gt;">
    <DisplayString>({this->functor}{this->bind_expr_args._Myfirst._Val})</DisplayString>
  </Type>
  <Type Name="wheels::const_call_list&lt;*,*,*&gt;">
    <DisplayString>({this->bind_expr_args._Myfirst._Val}{this->functor}{((std::tuple&lt;$T3&gt;*)(&amp;(this->bind_expr_args)))->_Myfirst._Val})</DisplayString>
  </Type>
  

  <Type Name="wheels::tensor_shape&lt;*&gt;">
    <DisplayString ExcludeView="noparens">empty shape</DisplayString>
  </Type>
  
  <Type Name="wheels::tensor_shape&lt;*,*&gt;">
    <DisplayString ExcludeView="noparens">{this->_val}</DisplayString>
    <Expand>
      <Item Name="[0]">this->_val</Item>
    </Expand>
  </Type>
  <Type Name="wheels::tensor_shape&lt;*,wheels::const_ints&lt;*,*&gt;&gt;">
    <DisplayString ExcludeView="noparens">{$T3}</DisplayString>
    <Expand>
      <Item Name="[0]">$T3</Item>
    </Expand>
  </Type>

  <Type Name="wheels::tensor_shape&lt;*,*,*&gt;">
    <DisplayString ExcludeView="noparens">{this->_val} x {((rest_tensor_shape_t*)this)->_val}</DisplayString>
    <Expand>
      <Item Name="[0]">this->_val</Item>
      <Item Name="[1]">((rest_tensor_shape_t*)this)->_val</Item>
    </Expand>
  </Type>
  <Type Name="wheels::tensor_shape&lt;*,*,wheels::const_ints&lt;*,*&gt;&gt;">
    <DisplayString ExcludeView="noparens">{this->_val} x {$T4}</DisplayString>
    <Expand>
      <Item Name="[0]">this->_val</Item>
      <Item Name="[1]">$T4</Item>
    </Expand>
  </Type>
  <Type Name="wheels::tensor_shape&lt;*,wheels::const_ints&lt;*,*&gt;,*&gt;">
    <DisplayString ExcludeView="noparens">{$T3} x {((rest_tensor_shape_t*)this)->_val}</DisplayString>
    <Expand>
      <Item Name="[0]">$T3</Item>
      <Item Name="[1]">((rest_tensor_shape_t*)this)->_val</Item>
    </Expand>
  </Type>
  <Type Name="wheels::tensor_shape&lt;*,wheels::const_ints&lt;*,*&gt;,wheels::const_ints&lt;*,*&gt;&gt;">
    <DisplayString ExcludeView="noparens">{$T3} x {$T5}</DisplayString>
    <Expand>
      <Item Name="[0]">$T3</Item>
      <Item Name="[0]">$T5</Item>
    </Expand>
  </Type>

  <Type Name="wheels::tensor_shape&lt;*,*,*,*&gt;">
    <DisplayString>{this->_val} x ...</DisplayString>
  </Type>
  <Type Name="wheels::tensor_shape&lt;*,wheels::const_ints&lt;*,*&gt;,*,*&gt;">
    <DisplayString>{$T3} x ...</DisplayString>
  </Type>

  <!-- static sized vector -->
  <Type Name="wheels::tensor&lt;*, wheels::tensor_shape&lt;unsigned __int64, wheels::const_ints&lt;unsigned __int64,*&gt;&gt;&gt;">
    <DisplayString>{{size={$T2}}}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>$T2</Size>
        <ValuePointer>this->_storage._data._Elems</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  
  <!-- dynamic sized vector -->
  <Type Name="wheels::tensor&lt;*, wheels::tensor_shape&lt;unsigned __int64,unsigned __int64&gt;&gt;">
    <DisplayString>{{size={this->_storage._shape._val}}}</DisplayString>
    <Expand>
      <Item Name="[capacity]">this->_storage._capacity</Item>
      <ArrayItems>
        <Size>this->_storage._shape._val</Size>
        <ValuePointer>this->_storage._data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
</AutoVisualizer>